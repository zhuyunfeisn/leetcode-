class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
    ListNode res = new ListNode(0); //头节点
        ListNode p = res;
        int c = 0;
        while(l1 != null || l2 != null || c != 0) { //只要有一个链表不为空或有进位，就继续遍历             //c!=0加上，重点
            int add = (l1 == null ? 0 : l1.val) + (l2 == null ? 0 : l2.val) + c;    //只加不为空的，或者进位
            if(add >= 10) {
                c = 1;
                add -= 10;
            }else c = 0;
            p.next = new ListNode(add); //直接从res.next开始处理
            p = p.next;
            l1 = l1 == null? null : l1.next;
            l2 = l2 == null? null : l2.next;
        }
        return res.next;    //返回next就好，轻松解决链表建立问题。


  
    }
}